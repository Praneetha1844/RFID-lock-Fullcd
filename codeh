#include <Keypad.h>
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27, 16, 2);
#include <SPI.h>
#include <MFRC522.h>
 
#define SS_PIN 10
#define RST_PIN 9
MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance.
 

const int ROW_NUM = 4; //four rows
const int COLUMN_NUM = 3; //three columns

char keys[ROW_NUM][COLUMN_NUM] = {
  {'1','2','3'},
  {'4','5','6'},
  {'7','8','9'},
  {'*','0','#'}
};

byte pin_rows[ROW_NUM] = {2, 3, 4, 5}; //connect to the row pinouts of the keypad
byte pin_column[COLUMN_NUM] = {6, 7, 8}; //connect to the column pinouts of the keypad

Keypad keypad = Keypad( makeKeymap(keys), pin_rows, pin_column, ROW_NUM, COLUMN_NUM );

const String password = "1234"; // change your password here
String input_password;

void setup(){
  Serial.begin(9600);
  input_password.reserve(32); // maximum input characters is 33, change if needed
   lcd.init(); // initialize the lcd 
   lcd.backlight();
   pinMode(A0,OUTPUT);
   pinMode(A1,OUTPUT);
   Serial.begin(9600);   // Initiate a serial communication
  SPI.begin();      // Initiate  SPI bus
  mfrc522.PCD_Init();   // Initiate MFRC522
  Serial.println("Approximate your card to the reader...");
  Serial.println();

}

void loop(){
  char key = keypad.getKey();

  if (key){
    Serial.println(key);
     lcd.print("X");
    if(key == '*') {
      input_password = ""; // clear input password
    } else if(key == '#') {
      if(password == input_password)
      {
        lcd.init();
        lcd.setCursor(0,0);
        lcd.clear();
        lcd.print("DOREAMON");
        delay(1000);
        digitalWrite(A0,HIGH);
        delay(10000);
        digitalWrite(A0,LOW);
        // DO YOUR WORK HERE
        
      }
      
      else {
        lcd.clear();
        lcd.print("NOBITA");
        digitalWrite(A1,HIGH);
        delay(5000);
        digitalWrite(A1,LOW);
        
       
        
      }

      input_password = ""; // clear input password
    } else {
      input_password += key; // append new character to input password string
    }
    lcd.clear();
  }
  
  
   else if( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }
  //Show UID on serial monitor
  Serial.print("UID tag :");
  String content= "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  Serial.print("Message : ");
  content.toUpperCase();
  if (content.substring(1) == "57 11 48 3E") //change here the UID of the card/cards that you want to give access
  {
    lcd.clear();
    lcd.print("Accessed");
    Serial.println();
    
     digitalWrite(A0,HIGH);
        delay(10000);
        digitalWrite(A0,LOW);
  }
   if (content.substring(1) == "CA 2D 8E 19") //change here the UID of the card/cards that you want to give access
  {
    lcd.clear(); 
    lcd.print("Accessed");
    Serial.println();
    digitalWrite(A0,HIGH);
        delay(10000);
        digitalWrite(A0,LOW);
   
  }
   if (content.substring(1) == "7A 6A A9 15") //change here the UID of the card/cards that you want to give access
  {
     lcd.clear();
    lcd.print("Accessed");
    Serial.println();
    digitalWrite(A0,HIGH);
        delay(10000);
        digitalWrite(A0,LOW);
   
  }
 
 else   {
    lcd.print(" Access denied");
    digitalWrite(A1,HIGH);
        delay(5000);
        digitalWrite(A1,LOW);
        
    
  }
  
}
